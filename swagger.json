{
  "swagger": "2.0",
  "info": {
    "version": "3.0.0",
    "title": "IMS"
  },
  "basePath": "/MINGLETEST1_DEV/CustomerApi/<API CONTEXT>/<PROXY CONTEXT>",
  "tags": [],
  "paths": {
    "/versions": {
      "get": {
        "tags": [
          "IMS Messaging Service"
        ],
        "summary": "VERSIONS :: Gets IMS services supported versions",
        "description": "This method returns the list of supported versions of the IMS.",
        "operationId": "VERSIONS",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            },
            "examples": {
              "A sample JSON response": {
                "supportedVersions": [
                  "v1",
                  "v2",
                  "v3"
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "Not Acceptable Response"
          },
          "500": {
            "description": "Internal Server Error "
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "IMS Messaging Service"
        ],
        "summary": "PING :: Ping Service interface, checks whether the server is available or not.",
        "description": "This method returns the server availability status.",
        "operationId": "PING",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "A sample JSON response": {
                "status": "OK",
                "code": 200
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "Not Acceptable Response"
          },
          "500": {
            "description": "Internal Server Error ",
            "examples": {
              "A sample JSON response": {
                "status": "FAIL",
                "code": 540,
                "errors": "Infor IMS Internal Server Error"
              }
            }
          }
        }
      }
    },
    "/protocol": {
      "get": {
        "tags": [
          "IMS Messaging Service"
        ],
        "summary": "PROTOCOL :: Gets IMS API supported version and protocol parameters",
        "description": "This method is used to retrieve the expected IMS API version and protocol parameters of the client application.",
        "operationId": "PROTOCOL",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            },
            "examples": {
              "A sample multipart protocol JSON response": {
                "version": "v3",
                "messageMethod": "MULTIPARTMESSAGAE",
                "supportedEncoding": "DEFLATE",
                "supportedCharacterSet": "UTF-8",
                "hasDiscovery": false
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "Not Acceptable Response"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error",
            "examples": {
              "A sample JSON response": {
                "status": "FAIL",
                "code": 540,
                "errors": "Infor IMS Internal Server Error"
              }
            }
          }
        }
      }
    },
    "/v2/multipartMessage": {
      "post": {
        "tags": [
          "IMS Messaging Service v2"
        ],
        "summary": "MULTIPARTMESSAGE :: Publish message to ION via IMS",
        "description": "This method will be validating message request as per API specification and publish the message and returns whether the message is successfully published or not.",
        "operationId": "MULTIPARTMESSAGE",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "X-TenantId",
            "in": "header",
            "description": "The tenantId as header parameter. Resource will be located based on tenantId.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ParameterRequest",
            "in": "formData",
            "description": "Parameter Request File. The content type must be set to application/json.\n Example: \n{\n  \"documentName\" : \"Sync.SalesOrder\",\n  \"messageId\" : \"message1\",\n  \"fromLogicalId\" : \"lid://infor.ims.imsap\",\n  \"toLogicalId\" : \"lid://default\",\n  \"encoding\" : \"NONE\",\n  \"characterSet\" : \"UTF-8\",\n  \"accountingEntity\" : \"ae1\",\n  \"location\" : \"loc123\",\n  \"documentId\" : \"sdafas\",\n  \"variationId\" : 1,\n  \"revisionId\" : \"123\",\n  \"batchId\" : \"infor.SSJE:1\",\n  \"batchSequence\" : 2,\n  \"batchSize\" : 1,\n  \"batchRevision\" : 1,\n  \"batchAbortIndicator\" : true,\n  \"instances\" : \"1\",\n  \"source\" : \"DB Connector\",\n  \"custom_property1\" : \"value1\",\n  \"custom_property2\" : \"value2\"\n}",
            "required": true,
            "type": "file"
          },
          {
            "name": "MessagePayload",
            "in": "formData",
            "description": "Message Payload File. The content type must be set to application/octet-stream.",
            "required": true,
            "type": "file"
          },
          {
            "name": "X-ClientId",
            "in": "header",
            "description": "The ClientId as Header Parameter. Used by ION API Gateway to validate the Client.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "Not Acceptable Response"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "Internal Server Error",
            "examples": {
              "A sample JSON response": {
                "status": "FAIL",
                "code": 419,
                "errors": "fromLogicalId is required"
              }
            }
          }
        }
      }
    },
    "/v2/message": {
      "post": {
        "tags": [
          "IMS Messaging Service v2"
        ],
        "summary": "MESSAGE_V2 :: Publish message to ION via IMS",
        "description": "This method will be validating message request as per API specification and publish the message and returns whether the message is successfully published or not.",
        "operationId": "MESSAGE_V2",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "X-TenantId",
            "in": "header",
            "description": "The tenantId as header parameter. Resource will be located based on tenantId.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "message",
            "description": "The message request body which needs to be published.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MessageRequest"
            }
          },
          {
            "name": "X-ClientId",
            "in": "header",
            "description": "The ClientId as Header Parameter. Used by ION API Gateway to validate the Client.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "Internal Server Error",
            "examples": {
              "A sample JSON response": {
                "status": "FAIL",
                "code": 419,
                "errors": "fromLogicalId is required"
              }
            }
          }
        }
      }
    },
    "/v2/test": {
      "post": {
        "tags": [
          "IMS Messaging Service v2"
        ],
        "summary": "TEST :: Test tenant and logicalIds registered or not.",
        "description": "Test tenant service request contains the logicalId, documentName(optional) and tenantId as header parameter.It checks for entitlement and whether route exists for the mentioned document and returns success message or the error details in case of failure.",
        "operationId": "TEST",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "X-TenantId",
            "in": "header",
            "description": "The tenantId as header parameter. Resource will be located based on tenantId.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TestRequest"
            }
          },
          {
            "name": "X-ClientId",
            "in": "header",
            "description": "The ClientId as Header Parameter. Used by ION API Gateway to validate the Client.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            },
            "examples": {
              "A sample JSON response": {
                "status": "OK",
                "code": 200,
                "errors": []
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "Internal Server Error",
            "examples": {
              "A sample JSON response": {
                "status": "FAIL",
                "code": 418,
                "errors": "tenantId is required. V1: tenant in the path. V2 and V3: set header X-TenantId"
              }
            }
          }
        }
      }
    },
    "/v3/multipartMessage": {
      "post": {
        "tags": [
          "IMS Messaging Service v3"
        ],
        "summary": "MULTIPARTMESSAGE_V3 :: Publish message to ION via IMS",
        "description": "This method will be validating message request as per API specification and publish the message and returns whether the message is successfully published or not.",
        "operationId": "MULTIPARTMESSAGE_V3",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-TenantId",
            "in": "header",
            "description": "The tenantId as header parameter. Resource will be located based on tenantId.",
            "required": true,
            "type": "string"
          },
          {
            "name": "logicalId",
            "in": "query",
            "description": "The From LogicalId as query parameter to specify from which application multipart message is being published",
            "required": false,
            "type": "string"
          },
          {
            "name": "documentName",
            "in": "query",
            "description": "The document name as query parameter of multipart message that is being published",
            "required": false,
            "type": "string"
          },
          {
            "name": "ParameterRequest",
            "in": "formData",
            "description": "Parameter Request File. The content type must be set to application/json. When selecting a file in this swagger, make sure that file has a '.json' extension\n Example: \n{\n  \"documentName\" : \"Sync.SalesOrder\",\n  \"messageId\" : \"message1\",\n  \"fromLogicalId\" : \"lid://infor.ims.imsap\",\n  \"toLogicalId\" : \"lid://default\",\n  \"encoding\" : \"NONE\",\n  \"characterSet\" : \"UTF-8\",\n  \"accountingEntity\" : \"ae1\",\n  \"location\" : \"loc123\",\n  \"documentId\" : \"sdafas\",\n  \"variationId\" : 1,\n  \"revisionId\" : \"123\",\n  \"batchId\" : \"infor.SSJE:1\",\n  \"batchSequence\" : 2,\n  \"batchSize\" : 1,\n  \"batchRevision\" : 1,\n  \"batchAbortIndicator\" : true,\n  \"instances\" : \"1\",\n  \"source\" : \"DB Connector\",\n  \"custom_property1\" : \"value1\",\n  \"custom_property2\" : \"value2\"\n}",
            "required": true,
            "type": "file",
            "format": "application/json"
          },
          {
            "name": "MessagePayload",
            "in": "formData",
            "description": "Message Payload File. The content type must be set to application/octet-stream. When selecting a file in this swagger, make sure that file has no extension, a '.bin' extension or any other extension which resolves to this content type.",
            "required": true,
            "type": "file",
            "format": "application/octet-stream"
          },
          {
            "name": "X-ClientId",
            "in": "header",
            "description": "The ClientId as Header Parameter. Used by ION API Gateway to validate the Client.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "Not Acceptable Response"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "Internal Server Error",
            "examples": {
              "A sample JSON response": {
                "status": "FAIL",
                "code": 419,
                "errors": "fromLogicalId is required"
              }
            }
          }
        }
      }
    },
    "/v3/{logicalId}/acceptedDocuments": {
      "get": {
        "tags": [
          "IMS Messaging Service v3"
        ],
        "summary": "ACCEPTEDDOCUMENTS :: List out all accepted documents for a given tenant and logical id",
        "description": "Accepted Documents service request contains the logicalId and tenantId as header parameter. It checks for entitlement, connection point active status and returns a list of documents configured in the IMS connection point or empty list if connection point is not in active state or it is not entitled to tenant.",
        "operationId": "ACCEPTEDDOCUMENTS",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-TenantId",
            "in": "header",
            "description": "The tenantId as header parameter. Resource will be located based on tenantId.",
            "required": true,
            "type": "string"
          },
          {
            "name": "logicalId",
            "in": "path",
            "description": "The LogicalId as path parameter to check the accepted documents.",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-ClientId",
            "in": "header",
            "description": "The ClientId as Header Parameter. Used by ION API Gateway to validate the Client.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            },
            "examples": {
              "A sample JSON response": {
                "logicalId": "lid://infor.ext.mycloudapp1",
                "acceptedDocuments": [
                  "Sync.SalesOrder",
                  "AnyDocument"
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "Internal Server Error",
            "examples": {
              "A sample JSON response": {
                "status": "FAIL",
                "code": 5004,
                "errors": "Application connection point '%s' is not in active state"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "MessageRequest": {
      "type": "object",
      "required": [
        "document",
        "documentName",
        "fromLogicalId"
      ],
      "properties": {
        "documentName": {
          "type": "string",
          "example": "Sync.SalesOrder"
        },
        "messageId": {
          "type": "string",
          "example": "msg#1234555",
          "minLength": 0,
          "maxLength": 250
        },
        "fromLogicalId": {
          "type": "string",
          "example": "lid://infor.ext.extappservice"
        },
        "toLogicalId": {
          "type": "string",
          "example": "lid://default",
          "minLength": 0,
          "maxLength": 250
        },
        "document": {
          "$ref": "#/definitions/Document"
        },
        "additionalProperties": {
          "$ref": "#/definitions/AdditionalProperties"
        }
      },
      "xml": {
        "name": "messageRequest"
      }
    },
    "AdditionalProperties": {
      "type": "object",
      "properties": {
        "accountingEntity": {
          "type": "string",
          "example": "infor12344",
          "minLength": 0,
          "maxLength": 22
        },
        "location": {
          "type": "string",
          "example": "nlregtest3",
          "minLength": 0,
          "maxLength": 22
        },
        "documentId": {
          "type": "string",
          "example": "doc1234587",
          "minLength": 0,
          "maxLength": 100
        },
        "variationId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "revisionId": {
          "type": "string",
          "example": "6784",
          "minLength": 0,
          "maxLength": 22
        },
        "batchId": {
          "type": "string",
          "example": "infor.SSJE:1",
          "minLength": 0,
          "maxLength": 250
        },
        "batchSequence": {
          "type": "integer",
          "format": "int64",
          "example": 2
        },
        "batchSize": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "batchRevision": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "batchAbortIndicator": {
          "type": "boolean",
          "example": true
        },
        "instances": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "minimum": 0,
          "maximum": 250
        },
        "source": {
          "type": "string",
          "example": "DB Connector",
          "minLength": 0,
          "maxLength": 250
        },
        "custom_property": {
          "type": "string",
          "example": "value"
        }
      },
      "xml": {
        "name": "additionalProperties"
      }
    },
    "Document": {
      "type": "object",
      "required": [
        "characterSet",
        "encoding",
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "Document value",
          "minLength": 1,
          "maxLength": 2147483647
        },
        "encoding": {
          "type": "string",
          "description": "encoding",
          "enum": [
            "NONE",
            "GZIP64",
            "BASE64",
            "DEFLATE64"
          ]
        },
        "characterSet": {
          "type": "string",
          "description": "characterSet",
          "enum": [
            "UTF-8"
          ]
        }
      },
      "xml": {
        "name": "document"
      }
    },
    "TestRequest": {
      "type": "object",
      "required": [
        "logicalId"
      ],
      "properties": {
        "logicalId": {
          "type": "string",
          "example": "lid://infor.ext.extappservice"
        },
        "documentName": {
          "type": "string",
          "example": "Sync.SalesOrder"
        }
      },
      "xml": {
        "name": "testRequest"
      }
    }
  }
}